<tool id="cialign" name="CIAlign" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" python_template_version="3.6" profile="21.05">
    <description>
        CIAlign a tool to clean, visualise and analyse a multiple sequence alignment
    </description>
    <!-- Import -->
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <version_command>cialign --version</version_command>
    <command detect_errors="exit_code"><![CDATA[
        CIAlign --infile $input
                --outfile_stem $prefix

                ###### Basic Options
                #if $basic_options.inifile
                    --inifile '$basic_options.inifile'
                #end if
                $basic_options.all
                $basic_options.clean
                $basic_options.visualise
                $basic_options.interpret
                $basic_options.silent
                
                ###### Remove Divergent options
                #if str($remove_divergent_cond.remove_divergent_param) == "true": 
                    --remove_divergent
                    #if $remove_divergent_cond.remove_divergent_retain:
                        --remove_divergent_retain "$remove_divergent_cond.remove_divergent_retain"
                    #end if
                    #if $remove_divergent_cond.remove_divergent_retain_str:
                        --remove_divergent_retain_str "$remove_divergent_cond.remove_divergent_retain_str"
                    #end if
                    #if $remove_divergent_cond.remove_divergent_retain_list:
                        --remove_divergent_retain_list '$remove_divergent_cond.remove_divergent_retain_list'
                    #end if
                #end if

                ###### Remove Insertions options
                #if str($remove_insertions_cond.remove_insertions_param) == "true": 
                    --remove_insertions
                    --insertion_min_size $remove_insertions_cond.insertion_min_size
                    --insertion_max_size $remove_insertions_cond.insertion_max_size
                    --insertion_min_flank $remove_insertions_cond.insertion_min_flank
                    --insertion_min_perc $remove_insertions_cond.insertion_min_perc
                #end if

                ###### Crop Ends options
                #if str($crop_ends_cond.crop_ends_param) == "true":
                    --crop_ends
                    --crop_ends_mingap_perc $crop_ends_cond.crop_ends_mingap_perc
                    --crop_ends_redefine_perc $crop_ends_cond.crop_ends_redefine_perc
                    #if $crop_ends_cond.crop_ends_retain:
                        --crop_ends_retain "$crop_ends_cond.crop_ends_retain"
                    #end if
                    #if $crop_ends_cond.crop_ends_retain_str:
                        --crop_ends_retain_str "$crop_ends_cond.crop_ends_retain_str"
                    #end if
                    #if $crop_ends_cond.crop_ends_retain_list:
                        --crop_ends_retain_list '$crop_ends_cond.crop_ends_retain_list'
                    #end if
                #end if

                ###### Remove Short options
                #if str($remove_short_cond.remove_short_param) == "true":
                    --remove_short
                    --remove_min_length $remove_short_cond.remove_min_length
                    #if $remove_short_cond.remove_short_retain:
                        --remove_short_retain "$remove_short_cond.remove_short_retain"
                    #end if
                    #if $remove_short_cond.remove_short_retain_str:
                        --remove_short_retain "$remove_short_cond.remove_short_retain_str"
                    #end if
                    #if $remove_short_cond.remove_short_retain_list:
                        --remove_short_retain "$remove_short_cond.remove_short_retain_list"
                    #end if
                #end if

                #if $keep_gaponly
                    --keep_gaponly
                #end if

                ###### Crop Divergent options
                #if str($crop_divergent_cond.crop_divergent_param) == "true":
                    --crop_divergent
                    --crop_divergent_min_prop_ident $crop_divergent_cond.crop_divergent_min_prop_ident
                    --crop_divergent_min_prop_nongap $crop_divergent_cond.crop_divergent_min_prop_nongap
                    --crop_divergent_buffer_size $crop_divergent_cond.crop_divergent_buffer_size
                #end if
                
                ###### Retain options
                #if str($retain_cond.retain_param) == "true":
                    #if $retain_cond.retain:
                        --retain "$retain_cond.retain"
                    #end if
                    #if $retain_cond.retain_str:
                        --retain_str "$retain_cond.retain_str"
                    #end if
                    #if $retain_cond.retain_list:
                        --retain_list "$retain_cond.retain_list"
                    #end if
                #end if

                ###### Outputs (Visualisation Functions)
                $output.plot_input
                $output.plot_output
                $output.plot_markup
                $output.plot_consensus_identity
                --plot_format "$output.output_settings.plot_format"
                --plot_width $output.output_settings.plot_width
                --plot_height $output.output_settings.plot_height
                $output.output_settings.plot_keep_numbers
                $output.output_settings.plot_force_numbers
                --plot_identity_palette "$output.output_settings.plot_identity_palette"
                --plot_identity_gap_col "$output.output_settings.plot_identity_gap_col"
                --plot_similarity_palette "$output.output_settings.plot_similarity_palette"
                --plot_similarity_gap_col "$output.output_settings.plot_similarity_gap_col"
                --palette "$output.output_settings.palette"
    ]]></command>
    <inputs>
        <param name="input" type="data" format="fasta"/>
        <param name="prefix" type="text" value="CIAlign" label="output data prefix:"/>
        <!-- BASIC options -->
        <section name="basic_options" title="Basic Options" expanded="true">
            <param argument="--inifile" type="data" format="ini" optional="true" label="config file" help="Upload a config file with all the needed settings and parameters" />
            <param argument="--all" type="boolean" truevalue="--all" falsevalue="" checked="false" label="Use all options" help="Use all available functions, with default parameters unless others are specified."/>
            <param argument="--clean" type="boolean" truevalue="--clean" falsevalue="" checked="false" label="Use all clean options" help="Use all cleaning functions, with default parameters unless others are specified."/>
            <param argument="--visualise" type="boolean" truevalue="--visualise" falsevalue="" checked="false" label="Plot all mini alignments" help="Plot all mini alignments, with default parameters unless others are specified."/>
            <param argument="--interpret" type="boolean" truevalue="--interpret" falsevalue="" checked="false" label="Use all interpretation functions" help="Use all interpretation functions, with default parameters unless others are specified."/>
            <param argument="--silent" type="boolean" truevalue="--silent" falsevalue="" checked="false" label="Do not print progress to the screen." help="Do not print progress to the screen."/>
        </section>
        <!-- Remove divergent options -->
        <conditional name="remove_divergent_cond">
            <param name="remove_divergent_param" type="select" label="Remove sequences with fewer than the specified proportion?">
                <option value="true" >yes</option>
                <option value="false" selected="true">option is not used</option>
            </param>            
            <when value="true">
                <!-- Remove divergent sub parameters -->
                <param argument="--remove_divergent_minperc" type="float" value="0.65" min="0" max="1" label="Minimum proportion" help="Minimum proportion of positions which should be identical to the most common base / amino acid in order to be preserved"/>
                <param argument="--remove_divergent_retain" type="text" value="" label="Retain sequences with this name" help="Do not remove sequences with this name when running remove divergent"/>
                <param argument="--remove_divergent_retain_str" type="text" value="" label="Retain sequences with names containing this character string" help="Do not remove sequences with this string when running divergent"/>            
                <param argument="--remove_divergent_retain_list" type="file" format="text" value="" optional="true" label="Do not remove sequences with names listed in this file:" help="Sequences names listed in the file won't be removed"/>            
            </when>
        </conditional>
        <!-- Remove Insertions options -->
        <conditional name="remove_insertions_cond">
            <param name="remove_insertions_param" type="select" label="Removes insertions which are not present in the majority of sequences?">
                <option value="true" >yes</option>
                <option value="false" selected="true">option is not used</option>
            </param>            
            <when value="true">
                <!-- Remove insertions sub parameters -->
                <param argument="--insertion_min_size" type="integer" value="3" min="1" label="Minimum size: " help="Only remove insertions bigger than this number of residues. Must be less than or equal to the number of columns in your alignment (i.e. sequence length)."/>
                <param argument="--insertion_max_size" type="integer" value="200" min="1" max="10000" label="Maximum size: " help="Only remove insertions smaller than this number of residues."/>
                <param argument="--insertion_min_flank" type="integer" value="5" min="0"  label="Minimum flank: " help="Minimum number of bases on either side of an insertion to classify it as an insertion. This value must be less than half the number of columns (alignment length) in your input file."/>            
                <param argument="--insertion_min_perc" type="float" value="0.5" min="0" max="1" label="Percent: " help="Remove insertions which are present in less than this proportion of sequences."/>            
            </when>
        </conditional>
        <!-- Crop Ends options -->
        <conditional name="crop_ends_cond">
            <param name="crop_ends_param" type="select" label="Crop the ends of individual sequences?" help="Crop the ends of sequences if they are poorly aligned.">
                <option value="true" >yes</option>
                <option value="false" selected="true">option is not used</option>
            </param>            
            <when value="true">
                <!-- Crop Ends sub parameters -->
                <param argument="--crop_ends_mingap_perc" type="float" value="0.05" min="0" max="0.6" label="Minimum Gap Percentage: " help="Minimum proportion of the sequence length (excluding gaps) that is the threshold for change in gap numbers."/>            
                <param argument="--crop_ends_redefine_perc" type="float" value="0.1" min="0" max="0.5" label="Proportion of the sequence length: " help="Proportion of the sequence length (excluding gaps) that is being checked for change in gap numbers to redefine start/end."/>            
                <param argument="--crop_ends_retain" type="text" value="" label="Retain sequences with this name" help="Do not crop the sequence with this name when running the crop_ends function. Can be specified multiple times."/>
                <param argument="--crop_ends_retain_str" type="text" value="" label="Retain sequences with names containing this character string" help="Do not crop sequences with names containing this word (character string) when running the crop_ends function. Case sensitive."/>            
                <param argument="--crop_ends_retain_list" type="file" format="text" value="" optional="true" label="Do not remove sequences with names listed in this file:" help="Do not crop the sequences listed in this file when running the crop_ends function. Sequence names must exactly match the FASTA infile. "/>
            </when>
        </conditional>
        <!-- Remove Short options -->
        <conditional name="remove_short_cond">
            <param name="remove_short_param" type="select" label="Removes short sequences?" help="Removes short sequences below a threshold length.">
                <option value="true" >yes</option>
                <option value="false" selected="true">option is not used</option>
            </param>            
            <when value="true">
                <!-- Remove Short sub parameters -->
                <param argument="--remove_min_length" type="integer" value="50" min="0" label="Minimum Lenght: " help="Sequences are removed if they are shorter than this minimum length, excluding gaps."/>            
                <param argument="--remove_short_retain" type="text" value="" label="Retain sequences with this name" help="Do not remove the sequence with this name when running the remove_divergent function. Sequence names must exactly match the FASTA infile. Can be specified multiple times"/>
                <param argument="--remove_short_retain_str" type="text" value="" label="Retain sequences with names containing this character string" help="Do not remove the sequences with names containing this word (character string) when running the remove_short function. Case sensitive. "/>            
                <param argument="--remove_short_retain_list" type="file" format="text" value="" optional="true" label="Do not remove sequences with names listed in this file:" help="Do not remove the sequences listed in this file when running the remove_short function. Sequence names must exactly match the FASTA infile."/>
            </when>
        </conditional>
        <!-- Keep Gap Only -->
        <param argument="--keep_gaponly" type="boolean" truevalue="--keep_gaponly" falsevalue="" checked="false" label="Keep gap only columns?" help="Keep gap only columns in the alignment."/>
        <!-- Crop Divergent options -->
        <conditional name="crop_divergent_cond">
            <param name="crop_divergent_param" type="select" label="Crop Divergent?" help="Removes sequences that are highly divergent from the majority, improving alignment quality by focusing on more conserved sequences.">
                <option value="true" >yes</option>
                <option value="false" selected="true">option is not used</option>
            </param>            
            <when value="true">
                <!-- Crop Divergent sub parameters -->
                <param argument="--crop_divergent_min_prop_ident" type="float" value="0.5" min="0.01" max="1" label="Minimum proportion: " help="The minimum proportion of sequences which should have the same residue in each column for crop divergent."/>            
                <param argument="--crop_divergent_min_prop_nongap" type="float" value="0.5" min="0.01" max="1" label="Minimum proportion (nongap): " help="The minimum proportion of sequences which should have the non-gap residues in each column for crop divergent."/>            
                <param argument="--crop_divergent_buffer_size" type="integer" value="5" min="1" label="Buffer Size: " help="The number of consecutive columns which should meet the min_prop_ident and min_prop_nongap criteria to pass filtering by crop_divergent."/>            
            </when>
        </conditional>
        <!-- Retain options -->
        <conditional name="retain_cond">
            <param name="retain_param" type="select" label="Retain sequences?" help="These parameters allow the user to specify sequences which should not be removed from the alignment.">
                <option value="true" >yes</option>
                <option value="false" selected="true">option is not used</option>
            </param>            
            <when value="true">
                <!-- Retain sub parameters -->
                <param argument="--retain" type="text" value="" label="Retain sequences with this name" help="Do not edit or remove sequences with this name when running any rowwise function"/>
                <param argument="--retain_str" type="text" value="" label="Do not edit or remove sequences with names containing this character string when running any rowwise function"/>            
                <param argument="--retain_list" type="file" format="text" value="" optional="true" label="Do not remove sequences with names listed in this file:" help="Do not edit or remove sequences with names listed in this file when running any rowwise function"/>
            </when>
        </conditional>
        <!-- Visualisation options -->
        <section name="output" title="Output" expanded="false">
            <param argument="--plot_input" type="boolean" checked="false" falsevalue="" truevalue="--plot_input" label="plot input" help="visualisation of the input alignment"/>
            <param argument="--plot_output" type="boolean" checked="false" falsevalue="" truevalue="--plot_output" label="plot output" help="visualisation of the cleaned output alignment"/>
            <param argument="--plot_markup" type="boolean" checked="false" falsevalue="" truevalue="--plot_markup" label="plot markup" help="visualisation of the input alignment with deleted rows and columns marked"/>
            <param argument="--plot_consensus_identity" type="boolean" checked="false" falsevalue="" truevalue="--plot_consensus_identity" label="plot consensus identity" help="Plot a mini alignment showing positions which are identical to or differ from the consensus."/>
            <param argument="--plot_consensus_similarity" type="boolean" checked="false" falsevalue="" truevalue="--plot_consensus_similarity" label="plot consensus identity" help="Plot a mini alignment showing positions based on their score when when compared via a substitution matrix to the consensus."/>        
            <section name="output_settings" title="Output Settings" expanded="false">
                <param argument="--plot_format" type="text" value="png" label="plotting format" help="Image format for mini alignments - can be png, svg, tiff or jpg"/>
                <param argument="--plot_width" type="integer" value="5" label="plot width" help="Mini alignment width in inches."/>
                <param argument="--plot_height" type="integer" value="3" label="plot height" help="Mini alignment height in inches."/>
                <param argument="--plot_keep_numbers" type="boolean" checked="false" falsevalue="" truevalue="--plot_keep_numbers" label="plot keep numbers" help="If specified, for mini alignments based on CIAlign output with smaller than 10 sequences (or if force_numbers is switched on) the rows will be labelled based on the input alignment, rather than renumbered."/>
                <param argument="--plot_force_numbers" type="boolean" checked="false" falsevalue="" truevalue="--plot_force_numbers" label="plot force numbers" help="Force all rows to be numbered on the mini alignments rather than labelling e.g. every 10th row for larger plots. Will cause labels to overlap on large plots."/>
                <param argument="--plot_identity_palette" type="text" value="bone" label="plot identity palette" help="Matplotlib palette name for identity mini alignments."/>
                <param argument="--plot_identity_gap_col" type="text" value="white" label="plot identity gap col" help="Colour for gaps in identity mini alignments."/>
                <param argument="--plot_similarity_palette" type="text" value="bone" label="plot similarity palette" help="Matplotlib palette name for similarity mini alignments."/>
                <param argument="--plot_similarity_gap_col" type="text" value="white" label="plot similarity gap col" help="Colour for gaps in similarity mini alignments."/>
                <param argument="--palette" type="text" value="CBS" label="Colour palette" help="Colour palette. Currently implemented CBS (colour blind safe) or bright."/>
            </section>
        </section>
    </inputs>
    <!-- TOOL Outputs-->
    <outputs>
        <data name="cleaned" format="fasta" from_work_dir="${prefix}_cleaned.fasta" label="${tool.name} on ${on_string}: Cleaned Alignment"/>
        <data name="removed" format="txt" from_work_dir="${prefix}_removed.txt" label="${tool.name} on ${on_string}: Removed Sequences"/>
        <data name="log" format="txt" from_work_dir="${prefix}_log.txt" label="${tool.name} on ${on_string}: Log File"/>
        <data name="plot_input" format="txt" from_work_dir="${prefix}_input.${output.output_settings.plot_format}" label="image representing the input alignment">
            <filter>output['plot_input']</filter>
        </data>
        <data name="plot_output" format="${plot_format}" from_work_dir="${prefix}_output.${plot_format}" label="${prefix}: image representing the output alignment">
            <filter>output['plot_output']</filter>
        </data>
        <data name="plot_markup" format="${plot_format}" from_work_dir="${prefix}_markup.${plot_format}" label="${prefix}: image representing the output alignment with the removed columns marked up">
            <filter>output['plot_markup']</filter>
        </data>
        <data name="plot_consensus_identity" format="${plot_format}" from_work_dir="${prefix}_plot_consensus_identity.${plot_format}" label="${prefix}: a mini alignment showing positions which are identical to or differ from the consensus.">
            <filter>output['plot_consensus_identity']</filter>
        </data>
        <data name="plot_consensus_similarity" format="${plot_format}" from_work_dir="${prefix}_plot_consensus_similarity.${plot_format}" label="${prefix}: a mini alignment showing positions based on their score when when compared via a substitution matrix to the consensus.">
            <filter>output['plot_consensus_similarity']</filter>
        </data>
    </outputs>
    <!-- include tests-->
    <expand macro="tests"/>
    <!-- include help--> 
    <expand macro="help"/>
    <citations>
        <citation type="bibtex">
            @misc{githubCIAlign,
            author = {LastTODO, FirstTODO},
            year = {TODO},
            title = {CIAlign},
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/KatyBrown/CIAlign},}
            </citation>
    </citations>
</tool>